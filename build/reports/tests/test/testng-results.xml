<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="API Test Suite" duration-ms="21554" started-at="2020-11-03T11:39:14Z" finished-at="2020-11-03T11:39:36Z">
    <groups>
    </groups>
    <test name="API Regression1" duration-ms="21554" started-at="2020-11-03T11:39:14Z" finished-at="2020-11-03T11:39:36Z">
      <class name="ViatorCalendar.MultiProductDetails">
        <test-method status="PASS" signature="setup()[pri:0, instance:ViatorCalendar.MultiProductDetails@5f37c15c]" name="setup" is-config="true" duration-ms="1280" started-at="2020-11-03T11:39:30Z" finished-at="2020-11-03T11:39:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="supplierCode1()[pri:0, instance:ViatorCalendar.MultiProductDetails@5f37c15c]" name="supplierCode1" duration-ms="2316" started-at="2020-11-03T11:39:31Z" finished-at="2020-11-03T11:39:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierCode1 -->
        <test-method status="PASS" signature="supplierCode2()[pri:0, instance:ViatorCalendar.MultiProductDetails@5f37c15c]" name="supplierCode2" duration-ms="2303" started-at="2020-11-03T11:39:33Z" finished-at="2020-11-03T11:39:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supplierCode2 -->
      </class> <!-- ViatorCalendar.MultiProductDetails -->
      <class name="ViatorCalendar.BasicProductDetails">
        <test-method status="PASS" signature="setup()[pri:0, instance:ViatorCalendar.BasicProductDetails@2b733b3c]" name="setup" is-config="true" duration-ms="902" started-at="2020-11-03T11:39:14Z" finished-at="2020-11-03T11:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="PricingUnit()[pri:0, instance:ViatorCalendar.BasicProductDetails@2b733b3c]" name="PricingUnit" duration-ms="4293" started-at="2020-11-03T11:39:15Z" finished-at="2020-11-03T11:39:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [per_vehicle] but found [PER_PERSON]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [per_vehicle] but found [PER_PERSON]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at ViatorCalendar.BasicProductDetails.PricingUnit(BasicProductDetails.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:139)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:89)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
at com.sun.proxy.$Proxy2.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:131)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155)
at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137)
at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PricingUnit -->
        <test-method status="PASS" signature="productCode()[pri:0, instance:ViatorCalendar.BasicProductDetails@2b733b3c]" name="productCode" duration-ms="2026" started-at="2020-11-03T11:39:19Z" finished-at="2020-11-03T11:39:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productCode -->
        <test-method status="PASS" signature="productDetailsFullResponse()[pri:0, instance:ViatorCalendar.BasicProductDetails@2b733b3c]" name="productDetailsFullResponse" duration-ms="2029" started-at="2020-11-03T11:39:21Z" finished-at="2020-11-03T11:39:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productDetailsFullResponse -->
        <test-method status="PASS" signature="productName()[pri:0, instance:ViatorCalendar.BasicProductDetails@2b733b3c]" name="productName" duration-ms="6377" started-at="2020-11-03T11:39:23Z" finished-at="2020-11-03T11:39:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productName -->
      </class> <!-- ViatorCalendar.BasicProductDetails -->
    </test> <!-- API Regression1 -->
  </suite> <!-- API Test Suite -->
</testng-results>
